# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything.
[ -z "$PS1" ] && return

# Source global definitions (if any).
if [ -f /etc/bashrc ]; then
      . /etc/bashrc
fi

# Don't put duplicate lines in the history. See bash(1) for more options.
# ... or force ignoredups and ignorespace.
HISTCONTROL=ignoredups:ignorespace

# Append to the history file, don't overwrite it.
shopt -s histappend

# Check the window size after each command and, if necessary.
# Update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Enable color support of ls and also add handy aliases.
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || \
	    eval "$(dircolors -b)"
fi

# Load bash alias definitions, if available.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Makes our day a bit more fun.... :-)
if [ "" != "$(which fortune)" ]; then
    fortune -s
fi

export LC_TIME=en_US.UTF-8
export LC_NAME=en_US.UTF-8
export LANG=en_US.UTF-8
export TIMEFORMAT=$'\nreal %3R\tuser %3U\tsys %3S\tpcpu %P\n'
export HISTIGNORE="&:bg:fg:ll:h"
export HISTTIMEFORMAT="`date` ~$  "
export HISTCONTROL=ignoredups

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /usr/share/git/completion/git-completion.bash ]; then
    source /usr/share/git/completion/git-completion.bash
fi
# Check also this, since in new versions of git the bash_comletion can be here
if [ -f /usr/share/bash-completion/bash_completion ]; then
  . /usr/share/bash-completion/bash_completion
fi
if [ -f /usr/share/bash-completion/completions/git ]; then
  . /usr/share/bash-completion/completions/git
fi


# Set keyboard rate, if not in SSH
if [ ! -n "$SSH_CLIENT" ] && [ ! -n "$SSH_TTY" ]; then
  xset r rate 200 32
fi

# Configure cuda-toolkit if available
if [ -e /usr/local/cuda-9.0 ]; then
  export PATH=$PATH:/usr/local/cuda-9.0/bin
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/extras/CUPTI/lib64
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/lib64
  export CUDA_ROOT=/usr/local/cuda-9.0
fi

# Use binary files from deephar, if available
if [ -e $HOME/deephar/bin ]; then
  export PATH=$PATH:$HOME/deephar/bin
fi

# Add local python binaries
if [ -e $HOME/.local/bin ]; then
  export PATH=$PATH:$HOME/.local/bin
fi

# Activate torch, if available there
if [ -f /home/diogo/git/torch/install/bin/torch-activate ]; then
  . /home/diogo/git/torch/install/bin/torch-activate
fi

